apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: perisco
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      name: perisco
  template:
    metadata:
      labels:
        name: perisco
    spec:
      serviceAccountName: perisco-account
      initContainers:
        - name: wait-for-elasticsaerch
          image: curlimages/curl:8.2.1
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh", "-c"]
          args:
            [
              "while [[ $(curl -sw '%{http_code}' http://elasticsearch-master:9200 -o /dev/null) -ne 200 ]]; do sleep 5; echo 'Waiting for the MongoDB to be ready...'; done; echo 'Connection with Elasticsearch established'",
            ]
      containers:
      - name: perisco-agent
        image: {{ .Values.perisco.image.repository }}:{{ .Values.perisco.image.tag }}
        imagePullPolicy: {{ .Values.perisco.image.pullPolicy }}
        resources:
          {{- toYaml .Values.perisco.resources | nindent 12 }}
        securityContext:
          privileged: true
          capabilities:
            add: 
            - CAP_SYS_ADMIN
        ports:
          - name: service
            containerPort: 8000
            hostPort: {{ .Values.perisco.server.hostPort }}
        env:
        - name: PERISCO_CIDRS
          value: {{ .Values.perisco.config.cidrs  | default "0.0.0.0/0" | quote }}
        - name: PERISCO_PROTOS
          value: {{ .Values.perisco.config.protocols | default "HTTP/1.1,MySQL" | quote }}
        - name: PERISCO_KUBERNETES
          value: "true"
        - name: PERISCO_SERVER_PORT
          value: "8000"
        - name: PERISCO_SERVER_DEBUG_HANDLER
          value: {{ .Values.perisco.server.debug | default "false" | quote }}
        - name: PERISCO_EXPORTER
          value: {{ .Values.perisco.exporter.name | default "elasticsearch" | quote }}
        - name: PERISCO_EXPORTER_ELASTICSEARCH_ADDRESSES
          value: {{ .Values.perisco.exporter.elasticsearch.addresses }}
